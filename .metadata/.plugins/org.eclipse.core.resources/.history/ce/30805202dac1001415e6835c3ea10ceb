package JayUI;



import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;

import java.awt.Dimension;

import java.awt.EventQueue;

import java.awt.Frame;

import java.awt.event.ActionEvent;

import java.awt.event.ActionListener;

import java.awt.event.KeyEvent;

import java.awt.event.KeyListener;



import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JMenuItem;

import javax.swing.JFrame;

import javax.swing.JPanel;

import javax.swing.border.EmptyBorder;

import javax.swing.JLabel;

import javax.swing.JTextField;



import JayUI.UIMain;

import NolanBackground.*;



public class UIAddItem extends JFrame implements ActionListener, KeyListener {



private JPanel contentPane;

static JTextField tfItemPST;

static JTextField tfItemGST;

static JTextField tfItemPrice;

static JTextField tfItemName;
static JTextField tfItemSale;

static JComboBox comboBox;

//static JTextField tfItemDiscount;



static JButton btnFinish;


/**

* Launch the application.

*/


public static void main(String[] args) {

EventQueue.invokeLater(new Runnable() {

public void run() {

try {

UIAddItem frame = new UIAddItem();

frame.setVisible(true);

} catch (Exception e) {

e.printStackTrace();

}

}

});

}



/**

* Create the frame.

*/

public UIAddItem() {

setBounds(100, 100, 450, 300);

contentPane = new JPanel();

contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

contentPane.setLayout(null);

setContentPane(contentPane);



JLabel lblItemName = new JLabel("Item Name :");

lblItemName.setSize(new Dimension(100, 50));

lblItemName.setLocation(60, 50);

contentPane.add(lblItemName, BorderLayout.NORTH);


JLabel lblItemPrice = new JLabel("Item Price :        $");

lblItemPrice.setSize(new Dimension(150, 50));

lblItemPrice.setLocation(60, 80);

contentPane.add(lblItemPrice, BorderLayout.NORTH);


JLabel lblItemPST = new JLabel("Item PST :         %");

lblItemPST.setSize(new Dimension(150, 50));

lblItemPST.setLocation(60, 110);

contentPane.add(lblItemPST, BorderLayout.NORTH);


JLabel lblItemGST = new JLabel("Item GST :         %");

lblItemGST.setSize(new Dimension(150, 50));

lblItemGST.setLocation(60, 140);

contentPane.add(lblItemGST, BorderLayout.NORTH);



JLabel lblItemSale = new JLabel("Item Sale :         %");

lblItemSale.setSize(new Dimension(150, 50));

lblItemSale.setLocation(60, 170);

contentPane.add(lblItemSale, BorderLayout.NORTH);


/*JLabel lblItemDiscount = new JLabel("Item Discount : %");

lblItemDiscount.setSize(new Dimension(150, 50));

lblItemDiscount.setLocation(60, 170);

contentPane.add(lblItemDiscount, BorderLayout.NORTH);*/



tfItemName = new JTextField();

tfItemName.setBounds(170, 62, 134, 28);

contentPane.add(tfItemName);

tfItemName.setColumns(10);


tfItemPrice = new JTextField();

tfItemPrice.setBounds(170, 92, 134, 28);

contentPane.add(tfItemPrice);

tfItemPrice.setColumns(10);


tfItemPST = new JTextField("7");

tfItemPST.setBounds(170, 122, 134, 28);

contentPane.add(tfItemPST);

tfItemPST.setColumns(10);


tfItemGST = new JTextField("5");

tfItemGST.setBounds(170, 152, 134, 28);

contentPane.add(tfItemGST);

tfItemGST.setColumns(10);


tfItemSale = new JTextField("");

tfItemSale.setBounds(170, 182, 134, 28);

contentPane.add(tfItemSale);

tfItemSale.setColumns(10);

/*tfItemDiscount = new JTextField();

tfItemDiscount.setBounds(170, 182, 134, 28);

contentPane.add(tfItemDiscount);

tfItemDiscount.setColumns(10);*/



btnFinish = new JButton("Add Item");

btnFinish.setSize(new Dimension(100, 50));

btnFinish.setLocation(330, 210);

contentPane.add(btnFinish);


comboBox = new JComboBox();
comboBox.setBounds(170, 212, 100, 28);
comboBox.setEditable(true);


comboBox.addItem("Red");
comboBox.addItem("Orange");
comboBox.addItem("Yellow");
comboBox.addItem("Green");
comboBox.addItem("Blue");
comboBox.addItem("Purple");


contentPane.add(comboBox);



btnFinish.addActionListener(this);

tfItemName.addKeyListener(this);
tfItemPrice.addKeyListener(this);
tfItemGST.addKeyListener(this);
tfItemPST.addKeyListener(this);





setFocusable(true);
}



@Override

public void keyTyped(KeyEvent e) {

// TODO Auto-generated method stub
	

}



@Override

public void keyPressed(KeyEvent e) {

// TODO Auto-generated method stub
	if (e.getKeyCode() == KeyEvent.VK_ENTER){
		generateButton();
	}

}



@Override

public void keyReleased(KeyEvent e) {

// TODO Auto-generated method stub


}



@Override

public void actionPerformed(ActionEvent e) {

// TODO Auto-generated method stub


if (e.getSource() == btnFinish){

	generateButton();

}

}

public void generateButton(){
	System.out.print("btnFinish pressed");

	boolean nameExists = false;

	if (!UIMain.button.isEmpty()){

	for (JButton bt : UIMain.button){

	if (bt.getText().equals(tfItemName.getText())){

	System.out.print("This name that you are trying to generate already exists");

	nameExists = true;

	break;

	}

	}

	}

	if (!nameExists){

	if (tfItemName.getText() instanceof String){


	JButton btn = new JButton(String.format("%s", tfItemName.getText()));

	btn.setSize(new Dimension(100,100));
	
	btn.setBackground(getBtnColor());
	btn.setOpaque(true);
	UIMain.setProperBtnLocation(btn);

	btn.addActionListener(UIMain.frame);

	UIMain.btnScrollContentPane.add(btn, BorderLayout.EAST);

	UIMain.button.add(btn);


	UIMain.btnCollum ++;

	UIMain.buttonI ++;


	int i = btn.getLocation().y;

	UIMain.btnScrollContentPane.setPreferredSize(new Dimension(730,i+100+20));

	UIMain.btnScrollContentPane.setSize(730,i+100+20);


	double itemPrice;

	double itemGST;

	double itemPST;
	double itemSale;


	if (tfItemPrice.getText().equals("")){

	itemPrice = 0.0;

	} else {

	itemPrice = Double.parseDouble(tfItemPrice.getText());

	}


	if (tfItemGST.getText().equals("")){

	itemGST = 0.0;

	} else {

	itemGST = Double.parseDouble(tfItemPST.getText());

	}


	if (tfItemPST.getText().equals("")){

	itemPST = 0.0;

	} else {

	itemPST = Double.parseDouble(tfItemGST.getText());

	}

	
	if (tfItemSale.getText().equals("")){

		itemSale = 0.0;

		} else {

		itemSale = Double.parseDouble(tfItemSale.getText());

		}

	
	String itemColor = comboBox.getEditor().getItem().toString();


	BackgroundMain2.newItem(new Items(tfItemName.getText(),itemPrice,itemPST,itemGST,itemSale,itemColor));



	UIMain.btnScrollPane.repaint();

	tfItemName.setText("");

	tfItemPrice.setText("");


	//focus the textField.

	tfItemName.requestFocus();

	} else {

	System.out.print("In order to create an itemButton, at least the name is required");

	}

	}
}

public Color getBtnColor(){
	String color = comboBox.getEditor().getItem().toString();
	Color returnColor = null;
	//Color INDIGO = new Color(75,0,130);
	Color PURPLE = new Color(138, 43, 226);

	if (color.equals("Red")){
		returnColor = Color.RED;
	} else if (color.equals("Orange")){
		returnColor = Color.ORANGE;
	} else if (color.equals("Yellow")){
		returnColor = Color.YELLOW;
	} else if (color.equals("Green")){
		returnColor = Color.GREEN;
	} else if (color.equals("Blue")){
		returnColor = Color.BLUE;
	} else if (color.equals("Purple")){
		returnColor = PURPLE;
	}
	return returnColor;
}

}